#******************************************************************************#
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: eddy <eddy@student.42.fr>                  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/11/19 15:51:52 by edbernar          #+#    #+#              #
#    Updated: 2023/11/29 23:59:37 by eddy             ###   ########.fr        #
#                                                                              #
#******************************************************************************#

MAKEFLAGS 		+= --silent

SRCS			=	main.c \
					print_logo.c \
					parsing.c \
					utils_one.c \
					utils_two.c \
					utils_three.c \
					utils_four.c \
					create_struct.c \
					free_all_cmd.c \
					fill_cmd.c \
					next_cmd.c \
					find_redir_in.c \
					find_redir_out.c \
					do_cmd.c \
					add_path.c \


NAME			=	minishell

OBJS			=	$(addprefix ./.build/, $(notdir $(SRCS:.c=.o)))

CC				=	gcc

# CFLAGS			=	-Wall -Wextra -Werror -g

TOTAL_SRCS		= 	$(words $(SRCS))

COMPILED_SRCS 	= 	0

all : ${NAME}

./.build/%.o : ./src/%.c
	@tput civis
	$(CC) -c $(CFLAGS) "$<" -o "$@" -Iinclude -Iinclude/libft -L./include/libft -lft -lreadline
	@if [ "$(COMPILED_SRCS)" -ne "0" ]; then \
        tput cuu1; \
		tput el; \
		tput cuu1; \
		tput el; \
		tput cuu1; \
		tput el; \
		tput cuu1; \
		tput el; \
    fi
	@echo "┌───────────────────────────────────────┐\n│\c"
	@if [ "$(COMPILED_SRCS)" -gt "0" ]; then \
        for i in $$(seq 0 $(shell echo "$$((($(COMPILED_SRCS) * 39) / $(TOTAL_SRCS)))")); do \
            printf "█"; \
        done; \
		for i in $$(seq 0 $(shell echo "$$(((($(TOTAL_SRCS) - $(COMPILED_SRCS)) * 39) / $(TOTAL_SRCS) - 1))")); do \
            printf " "; \
        done; \
    fi
	@echo "│\n└───────────────────────────────────────┘"
	@echo "[ $$(expr \( $(COMPILED_SRCS) \* 100 \) / $(TOTAL_SRCS))% ]\033[32m $< \033[0m"
	$(eval COMPILED_SRCS=$(shell echo $$(($(COMPILED_SRCS)+1))))
	@tput cnorm

libft :
	@make -C "./include/libft/"

create :
	@mkdir -p .build

${NAME} : create libft ${OBJS}
	@if [ "$(COMPILED_SRCS)" -ne "0" ]; then \
		tput cuu1; \
		tput el; \
		tput cuu1; \
		tput el; \
		tput cuu1; \
		tput el; \
		tput cuu1; \
		tput el; \
    fi
	@if [ "$(COMPILED_SRCS)" -ne "0" ]; then \
        echo "┌───────────────────────────────────────┐"; \
		echo "│███████████████████████████████████████│"; \
		echo "└───────────────────────────────────────┘"; \
		gcc ${OBJS} -o ${NAME} -Iinclude -L./include/libft -lft -lreadline; \
		echo "[ 100% ]\033[32m Compilation $(NAME) completed !\033[0m"; \
		echo "\n\033[32mThe program \"$(NAME)\" is ready !\033[0m"; \
	else \
		echo "\033[32mThe program \"$(NAME)\" is already ready !\033[0m"; \
	fi

clean :
	@rm -rf .build
	@make -C "./include/libft/" clean
	@echo "Files successfully cleaned."

fclean : clean
	@make -C "./include/libft/" fclean
	@rm -f ${NAME}

re	: fclean all

.PHONY : libft re fclean all clean create
